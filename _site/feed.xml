

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Antraxmin</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2023-06-26T17:39:41+09:00</updated>
  <author>
    <name>Antraxmin</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator>
  <rights> © 2023 Antraxmin </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Jekyll Chirpy 테마 오류 해결 일지</title>
    <link href="http://localhost:4000/posts/jekyll-sidebar-toc-error/" rel="alternate" type="text/html" title="Jekyll Chirpy 테마 오류 해결 일지" />
    <published>2023-06-26T13:31:00+09:00</published>
  
    <updated>2023-06-26T13:31:00+09:00</updated>
  
    <id>http://localhost:4000/posts/jekyll-sidebar-toc-error/</id>
    <content src="http://localhost:4000/posts/jekyll-sidebar-toc-error/" />
    <author>
      <name>Antraxmin</name>
    </author>

  
    
    <category term="Blog" />
    
  

  
    <summary>
      





      지난 포스팅에서 Chirpy 테마를 이용해 Jekyll 테마를 성공적으로 배포하였다고 생각하였으나 예상치 못한 오류가 발생하였다. 발생한 오류는 다음과 같다.


  다크모드 적용 X
  TOC 자동 생성 X
  모바일 화면에서 사이드바 및 검색 기능 작동 X


chirpy 테마가 자랑하는 핵심적인 기능이 작동하지 않았기 때문에 github issue와 stackoverflow를 열심히 뒤져서 오류를 해결하였다. 해결하는 과정에서 도움이 되었던 한국어 문서는 단 한 건도 없었기 때문에 똑같은 오류를 겪고 있는 분들이 내 블로그를 보고 시간낭비 없이 오류를 해결하였으면 한다.

먼저 강조하고 싶은 것은 본인의 로컬 환경이 아닌 Jekyll 블로그 테마 상의 문제라고 생각되었을 때 가장 먼저 찾아봐야 하...
    </summary>
  

  </entry>

  
  <entry>
    <title>Jekyll Chirpy 테마로 나만의 기술 블로그 만들기</title>
    <link href="http://localhost:4000/posts/jekyll-chirpy-theme-blog/" rel="alternate" type="text/html" title="Jekyll Chirpy 테마로 나만의 기술 블로그 만들기" />
    <published>2023-06-24T17:17:00+09:00</published>
  
    <updated>2023-06-24T19:13:40+09:00</updated>
  
    <id>http://localhost:4000/posts/jekyll-chirpy-theme-blog/</id>
    <content src="http://localhost:4000/posts/jekyll-chirpy-theme-blog/" />
    <author>
      <name>Antraxmin</name>
    </author>

  
    
    <category term="Blog" />
    
  

  
    <summary>
      





      Jekyll의 인기있는 테마 중 하나인 Chirpy를 이용해 기술 블로그를 만들어 보려고 한다. 전에 github pages를 이용하여 배포를 시도하였으나, 유독 Chirpy 테마만 제대로 빌드되지 않았던 기억이 있다. 현재는 개인 커스텀 도메인도 소유하고 있어 굳이 github.io 를 사용할 필요가 없기에 배포는 Vercel 을 이용하여 진행할 것이다. 

1. Ruby 설치

Jekyll을 사용하여 기술 블로그를 만들기 위해서는 먼저 Ruby와 jekyll 을 로컬 컴퓨터에 설치해야 한다. 윈도우 환경에서는 Ruby 공식 사이트를 통해 다운받거나 chocolatey 같은 패키지 매니저를 이용하여 Ruby를 설치한다.

Ruby를 설치하였다면 터미널에 접속하여 다음 명령어로 jekyll을 설치한다....
    </summary>
  

  </entry>

  
  <entry>
    <title>웹의 기본 구조</title>
    <link href="http://localhost:4000/posts/springboot-02-web/" rel="alternate" type="text/html" title="웹의 기본 구조" />
    <published>2023-06-12T22:40:00+09:00</published>
  
    <updated>2023-06-12T22:40:00+09:00</updated>
  
    <id>http://localhost:4000/posts/springboot-02-web/</id>
    <content src="http://localhost:4000/posts/springboot-02-web/" />
    <author>
      <name>Antraxmin</name>
    </author>

  
    
    <category term="Study" />
    
    <category term="Spring Boot" />
    
  

  
    <summary>
      





      본격적인 스프링부트 개발에 앞서서 웹을 구성하는 클라이언트와 서버의 개념을 알아보고 두 요소 간의 통신을 가능하게 해주는 프로토콜인 HTTP와 HTTP 프로토콜을 사용하여 데이터를 주고받을 수 있게 하는 REST API의 개념에 대해 알아보자.

클라이언트와 서버

컴퓨터 네트워크 상에서 상호작용하는 두 가지 요소는 클라이언트와 서버이다. 클라이언트(Client)는 서비스를 요청하는 주체로, 웹 브라우저나 모바일 애플리케이션 상에서 특정한 동작을 통해 서버로 요청을 보내는 역할을 한다. 서버(Server)는 클라이언트의 요청을 받아 처리하고, 필요한 작업을 수행하여 클라이언트에게 데이터나 서비스를 제공하는 역할을 한다.

쉽게 말해서 클라이언트는 서비스를 사용하는 컴퓨터, 서버는 서비스를 제공하는 컴퓨...
    </summary>
  

  </entry>

  
  <entry>
    <title>Spring Boot 개발환경 구축 (IntelliJ)</title>
    <link href="http://localhost:4000/posts/springboot-01-setup/" rel="alternate" type="text/html" title="Spring Boot 개발환경 구축 (IntelliJ)" />
    <published>2023-05-27T14:58:00+09:00</published>
  
    <updated>2023-05-27T14:58:00+09:00</updated>
  
    <id>http://localhost:4000/posts/springboot-01-setup/</id>
    <content src="http://localhost:4000/posts/springboot-01-setup/" />
    <author>
      <name>Antraxmin</name>
    </author>

  
    
    <category term="Study" />
    
    <category term="Spring Boot" />
    
  

  
    <summary>
      





      스프링부트란?

기존 스프링 프레임워크의 복잡한 환경 설정을 간소화하여 쉽고 빠르게 개발을 시작할 수 있도록 도와주는 경량화 프레임워크이다. 스프링부트는 다음과 같은 편리함을 제공한다.


  내장 Tomcat 서버를 통한 빠르고 간편한 배포
  starter를 통한 의존성 관리 자동화
  xml 설정 자동화를 통한 복잡한 설정 간소화


스프링부트 개발환경 구축하기


  해당 포스팅은 사전에 IntelliJ 및 Java JDK 11이 설치되어 있다고 가정하고 진행한다.


Spring Initializer 구성

Spring Initializer란 스프링에서 공식 지원하는 웹 기반의 프로젝트 생성 도구이다. start.spring.io에 접속하여 본인이 사용할 빌드 툴, 언어, JDK 버전 및 De...
    </summary>
  

  </entry>

</feed>


